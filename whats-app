## Import libraries
import numpy as np 
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
%matplotlib inline

## Import data file
wtsup = pd.read_csv('Whatsapp_chat.csv', index_col=0)
wtsup

wtsup.groupby('names').count()

from matplotlib import ticker
formatter = ticker.ScalarFormatter(useMathText=True)
formatter.set_scientific(True) 
formatter.set_powerlimits((3,3))

## Let's  check how many messages that every person sent 
sns.countplot(x='names', data=wtsup).yaxis.set_major_formatter(formatter)  

wtsup_temp = wtsup['names'].value_counts()
wtsup_temp

wtsup_temp.plot.pie(figsize=(12,12), legend=False, autopct='%1.1f%%', shadow=True, explode=(0.05, 0, 0, 0)).set(ylabel='message ratios')

## shows distribution among hours of a day
plt.figure(figsize=(10,5))
sns.countplot(x='hours', data=wtsup).yaxis.set_major_formatter(formatter) 

wtsup_by_date = wtsup.groupby(['months', 'days']).count()
wtsup_by_date

## Density of messages each day
wtsup_heat = wtsup_by_date.pivot_table(values='hours', index='months', columns='days')
plt.figure(figsize=(30,4))
sns.heatmap(wtsup_heat, cmap='rainbow').set(title='Message Density of Each Day')

wtsup_by_timestamp = wtsup[['timestamp', 'names']].value_counts().unstack(level=1).fillna(0) #groups data frame by timestamp and shows how many messages are sent by each person
wtsup_by_timestamp

plt.figure(figsize=(20,10))
'''ax = sns.lineplot(data=wtsup_by_timestamp["Person1"])
ax = sns.lineplot(data=wtsup_by_timestamp["Person2"])
ax = sns.lineplot(data=wtsup_by_timestamp["Person3"])
ax = sns.lineplot(data=wtsup_by_timestamp["Person4"])'''
ax = sns.lineplot(data=wtsup_by_timestamp)
ax.xaxis.set_ticks(np.arange(0, 100, 10))
ax

## extracting column values for further examination
names = np.array(wtsup['names'])
hours = np.array(wtsup['hours'])
dates = np.array(wtsup['timestamp'])

## according to names and dates, examines columns and counts how many consecutive messages are sent by only two people in an ongoing conversation
## and indicates in which time interval that messages are taken place
## the message number must be greater than 49 to be considered as a streak

date_list = []
name_pair = []
time_interval = []
count = 0
name_pair_list = []
streak_list = []
time_interval_list = []
index = 0
for name in names:
    if len(name_pair) == 0:
        count += 1
        name_pair.append(name)
        date = dates[index]
        time_interval.append(hours[index])
    elif len(name_pair) == 1:
        count += 1
        if name not in name_pair:
            name_pair.append(name)
            if len(time_interval) == 2:
                time_interval[1] = hours[index]
            else:
                time_interval.append(hours[index])
    elif name in name_pair:
        time_interval[1] = hours[index]
        count += 1
    else:
        if count>49:
            streak_list.append(count)
            copy_pair = sorted(name_pair)
            name_pair_list.append((copy_pair[0], copy_pair[1]))
            time_interval_list.append((time_interval[0], time_interval[1]))
            date_list.append(date)
        count = 1
        name_pair.pop(0)
        time_interval.pop(0)
        name_pair.append(name)
        time_interval.append(hours[index])
        date = dates[index]
    index += 1
    
    ## new DataFrame that shows how many messages are sent by people pairs as streaks
    wtsup_streaks = pd.DataFrame({'Name Pairs':name_pair_list, 'Streak Counts':streak_list, 'Time Interval':time_interval_list, 'Timestamp':date_list})
wtsup_streaks.sort_values(by='Streak Counts', ascending=False)

plt.figure(figsize=(10,5))
axes = sns.barplot(x='Name Pairs', y ='Streak Counts', data=wtsup_streaks, estimator=np.sum)
axes.set(ylabel='Sum of Streak Numbers')
axes.yaxis.set_major_formatter(formatter)
